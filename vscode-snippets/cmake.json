{
	/*
	 // Place your snippets for CMake here. Each snippet is defined under a snippet name and has a prefix, body and 
	 // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	 // $1, $2 for tab stops, ${id} and ${id:label} and ${1:label} for variables. Variables with the same id are connected.
	 // Example:
	 "Print to console": {
		"prefix": "log",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	}
*/
	"Cmake project": {
		"prefix": "cmake_project",
		"body": [
			"cmake_minimum_required(VERSION 2.8)\nProject ( $1 )\n",
			"set(CMAKE_CXX_FLAGS \"\\${CMAKE_CXX_FLAGS} -std=c++14\")",
			"set(CMAKE_CXX_FLAGS_DEBUG \"\\${CMAKE_CXX_FLAGS_DEBUG} -Wall -Wextra -pedantic\")",
			"$2"
		],
		"description": "Cmake project"
	},
	"Cmake executable": {
		"prefix": "cmake_exe",
		"body": [
			"add_executable(\n\t$1\n\t$2.cpp\n)",
			"target_link_libraries ($1 pthread)"
		],
		"description": "Cmake add executable"
	},
	"Cmake SFML": {
		"prefix": "cmake_sfml",
		"body": [
			"find_package(SFML 2 COMPONENTS system graphics window)",
			"include_directories(\\${SFML_INCLUDE_DIR})",
			"#\\${SFML_LIBRARIES}"
		],
		"description": "Cmake SFML find package"
	},
	"Cmake Boost": {
		"prefix": "cmake_boost",
		"body": [
			"find_package(Boost REQUIRED COMPONENTS system)",
			"include_directories( \\${Boost_INCLUDE_DIR} )",
			"#\\${Boost_LIBRARIES}"
		],
		"description": "Cmake find Boost"
	}
}